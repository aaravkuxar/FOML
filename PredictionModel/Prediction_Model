{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2d331050-9f3e-43e5-853a-4937c99622b8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sb\n",
    "from sklearn.naive_bayes import GaussianNB\n",
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "61b8c37b-3a04-45f1-9db7-55153bb3bf4d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      User ID  Gender  Age  EstimatedSalary  Purchased\n",
      "0    15624510    Male   19            19000          0\n",
      "1    15810944    Male   35            20000          0\n",
      "2    15668575  Female   26            43000          0\n",
      "3    15603246  Female   27            57000          0\n",
      "4    15804002    Male   19            76000          0\n",
      "..        ...     ...  ...              ...        ...\n",
      "395  15691863  Female   46            41000          1\n",
      "396  15706071    Male   51            23000          1\n",
      "397  15654296  Female   50            20000          1\n",
      "398  15755018    Male   36            33000          0\n",
      "399  15594041  Female   49            36000          1\n",
      "\n",
      "[400 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv(r'/home/aaravk/Pictures/Social_Network_Ads.csv')\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3a60a444-498a-4110-ad04-96ae1139fc96",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      User ID  Gender  Age  EstimatedSalary  Purchased\n",
      "0    15624510       0   19            19000          0\n",
      "1    15810944       0   35            20000          0\n",
      "2    15668575  Female   26            43000          0\n",
      "3    15603246  Female   27            57000          0\n",
      "4    15804002       0   19            76000          0\n",
      "..        ...     ...  ...              ...        ...\n",
      "395  15691863  Female   46            41000          1\n",
      "396  15706071       0   51            23000          1\n",
      "397  15654296  Female   50            20000          1\n",
      "398  15755018       0   36            33000          0\n",
      "399  15594041  Female   49            36000          1\n",
      "\n",
      "[400 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "df['Gender'].replace('Male',0,inplace=True)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "327017a7-24aa-4347-b025-62a863274fdf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      User ID  Gender  Age  EstimatedSalary  Purchased\n",
      "0    15624510       0   19            19000          0\n",
      "1    15810944       0   35            20000          0\n",
      "2    15668575       1   26            43000          0\n",
      "3    15603246       1   27            57000          0\n",
      "4    15804002       0   19            76000          0\n",
      "..        ...     ...  ...              ...        ...\n",
      "395  15691863       1   46            41000          1\n",
      "396  15706071       0   51            23000          1\n",
      "397  15654296       1   50            20000          1\n",
      "398  15755018       0   36            33000          0\n",
      "399  15594041       1   49            36000          1\n",
      "\n",
      "[400 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "df['Gender'].replace('Female',1,inplace=True)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "34a32880-befd-4d97-b1e9-bb0518536ccd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      User ID  Gender  Age  EstimatedSalary\n",
      "0    15624510       0   19            19000\n",
      "1    15810944       0   35            20000\n",
      "2    15668575       1   26            43000\n",
      "3    15603246       1   27            57000\n",
      "4    15804002       0   19            76000\n",
      "..        ...     ...  ...              ...\n",
      "395  15691863       1   46            41000\n",
      "396  15706071       0   51            23000\n",
      "397  15654296       1   50            20000\n",
      "398  15755018       0   36            33000\n",
      "399  15594041       1   49            36000\n",
      "\n",
      "[400 rows x 4 columns]\n"
     ]
    }
   ],
   "source": [
    "x=df.iloc[:,[0,1,2,3]]\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b65284ce-5212-45ae-af70-8c2479e8d1d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     Purchased\n",
      "0            0\n",
      "1            0\n",
      "2            0\n",
      "3            0\n",
      "4            0\n",
      "..         ...\n",
      "395          1\n",
      "396          1\n",
      "397          1\n",
      "398          0\n",
      "399          1\n",
      "\n",
      "[400 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "y=df.iloc[:,[-1]]\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "de117db0-0b7a-4217-b3d5-26d9294660bc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      User ID  Gender  Age  EstimatedSalary\n",
      "324  15575247       1   48           131000\n",
      "212  15707596       1   59            42000\n",
      "364  15654456       0   42           104000\n",
      "246  15638003       1   35            50000\n",
      "325  15695679       1   41            60000\n",
      "..        ...     ...  ...              ...\n",
      "76   15746737       0   18            52000\n",
      "385  15775335       0   56            60000\n",
      "123  15574305       0   35            53000\n",
      "349  15721835       0   38            61000\n",
      "130  15675185       0   31            58000\n",
      "\n",
      "[320 rows x 4 columns]       User ID  Gender  Age  EstimatedSalary\n",
      "336  15664907       0   58           144000\n",
      "67   15654574       1   23            82000\n",
      "65   15718071       0   24            58000\n",
      "223  15593715       0   60           102000\n",
      "137  15687491       0   30           107000\n",
      "..        ...     ...  ...              ...\n",
      "86   15694946       0   24            55000\n",
      "365  15807525       1   59            29000\n",
      "99   15756820       1   28            37000\n",
      "244  15586996       1   41            72000\n",
      "347  15768151       1   54           108000\n",
      "\n",
      "[80 rows x 4 columns]      Purchased\n",
      "324          1\n",
      "212          0\n",
      "364          1\n",
      "246          0\n",
      "325          0\n",
      "..         ...\n",
      "76           0\n",
      "385          1\n",
      "123          0\n",
      "349          0\n",
      "130          0\n",
      "\n",
      "[320 rows x 1 columns]      Purchased\n",
      "336          1\n",
      "67           0\n",
      "65           0\n",
      "223          1\n",
      "137          1\n",
      "..         ...\n",
      "86           0\n",
      "365          1\n",
      "99           0\n",
      "244          0\n",
      "347          1\n",
      "\n",
      "[80 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "x_train,y_train,x_test,y_test=train_test_split(x,y,test_size=0.2)\n",
    "print(x_train,y_train,x_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fb505411-076c-454c-a2c3-d839ed25d371",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GaussianNB()\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/lib/python3.11/site-packages/sklearn/utils/validation.py:1300: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n"
     ]
    }
   ],
   "source": [
    "model = GaussianNB()\n",
    "print(model.fit(x,y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "57b9bf0c-90fc-4fac-bbee-7f4f1dd9f528",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.885\n"
     ]
    }
   ],
   "source": [
    "print(model.score(x,y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "75d465bb-7abe-45a6-82c8-a43a48bd1618",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 1 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
      " 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0\n",
      " 1 1 0 0 1 1 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 1\n",
      " 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 0\n",
      " 0 1 1 1 1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 1 1 0 1 0\n",
      " 0 1 0 1 0 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 0 1\n",
      " 1 1 0 1 0 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 1 0 1]\n"
     ]
    }
   ],
   "source": [
    "mod=model.predict(x)\n",
    "print(mod)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9072de6f-6bb3-48ee-8073-3a7b08599cc6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
